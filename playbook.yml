- name: Docker Daemon 
  hosts: docker-host
  tasks:
      - name: Upgrade Ansible to most current version 
        command: pip install --upgrade ansible 
#     - name: Upgrade docker-py to fix Docker API issues 
#       command: pip install --upgrade docker-py 
      - name: Install Docker keys
        apt_key: state=present keyserver=keyserver.ubuntu.com id=36A1D7869245C8950F966E92D8576A8BA88D21E9
      - name: Install Docker repository
        apt_repository: repo='deb https://get.docker.io/ubuntu docker main' state=present
      - name: Install Docker
        apt: name=lxc-docker state=latest update_cache=true cache_valid_time=600
      - name: Add vagrant to the docker group
        user: name=vagrant state=present groups=docker
#     - name: Have Docker use Consul for DNS
#       lineinfile: dest=/etc/default/docker line='DOCKER_OPTS="--dns 192.168.44.60 --dns 8.8.8.8 --dns 8.8.4.4 --dns-search service.consul"'
      - name: Expose the daemon over insecure HTTP
        lineinfile: dest=/etc/default/docker line='DOCKER_OPTS="-H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock"'
      - name: Set Memory and Swap Accounting
        lineinfile: dest=/etc/default/grub regexp='^GRUB_CMDLINE_LINUX=""' line='GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"'
      - name: Rebuild GRUB
        command: update-grub
      - name: Restart Docker
#       service: name=docker state=restarted
        command: service docker restart 
      - name: Install Docker Compose
        command: pip install --upgrade docker-compose

- name: Common Bits 
  hosts: all
  tasks:
      - name: Copy the sudoers file
        copy: src=files/passwordless-sudo dest=/etc/sudoers.d/passwordless-sudo owner=root group=root mode=0440 backup=no
#     - name: Upgrade currently installed packages
#       apt: "upgrade=dist state=present update_cache=true cache_valid_time=600"
      - name: Install common packages
        apt: "name={{ item }} state=present"
        with_items:
           - python-apt
           - curl
           - telnet
           - apt-transport-https
           - wget
           - tmux
           - subversion
           - mercurial
           - sysstat
           - iotop
      - name: Copy bash alias file
        copy: src=files/.bash_aliases dest=/home/vagrant/.bash_aliases owner=vagrant group=vagrant backup=no mode=744
      - name: Create GitHub directory 
        file: path=/home/vagrant/GitHub owner=vagrant group=vagrant state=directory mode=755
      - name: Create Bitbucket directory 
        file: path=/home/vagrant/Bitbucket owner=vagrant group=vagrant state=directory mode=755
      - name: Create Stash directory 
        file: path=/home/vagrant/Stash owner=vagrant group=vagrant state=directory mode=755
      - name: Create .lazybones directory 
        file: path=/home/vagrant/.lazybones owner=vagrant group=vagrant state=directory mode=755
      - name: Copy lazybones configurations file  
        copy: src=files/config.groovy dest=/home/vagrant/.lazybones/config.groovy owner=vagrant group=vagrant backup=no mode=744
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Webmin 
  hosts: webmin
  tasks:
      - name: Install Webmin keys
        apt_key: url='http://www.webmin.com/jcameron-key.asc' state=present
      - name: Install primary Webmin repository
        apt_repository: repo='deb http://download.webmin.com/download/repository sarge contrib' state=present
      - name: Install secondary Webmin repository
        apt_repository: repo='deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib' state=present
      - name: Install Webmin software
        apt: name=webmin state=latest

- name: Install Consul Docker Container 
  hosts: consul-container
  tasks:
      - name: Consul Data
        docker:
            name: consul-data
            image: busybox
            state: present
            volumes:
            - /data
      - name: Consul
        docker:
            name: consul
            hostname: consul
            image: progrium/consul
            command: -server -bootstrap -ui-dir /ui
            state: started
            restart_policy: always
            pull: always
            ports:
            - "8300:8300"
            - "8301:8301"
            - "8301:8301/udp"
            - "8302:8302"
            - "8302:8302/udp"
            - "8400:8400"
            - "8500:8500"
            - "53:53/udp"
            volumes_from:
            - consul-data
            env:
                SERVICE_8300_NAME: consul
                SERVICE_8301_NAME: consul-serf-lan
                SERVICE_8302_NAME: consul-serf-wan
                SERVICE_8400_NAME: consul-rpc
                SERVICE_8500_NAME: consul-http
                SERVICE_53_NAME: consul-dns

- name: Install Consul Registrator 
  hosts: registrator
  tasks:
      - name: Regitrator 
        docker:
            name: registrator
            hostname: registrator
            image: gliderlabs/registrator
            command: -ip 192.168.44.60 consul://192.168.44.60:8500
            state: started
            restart_policy: always
            pull: always
            volumes:
            - /var/run/docker.sock:/tmp/docker.sock

- name: Install Redis Containers
  hosts: redis-container
  tasks:
      - name: Redis Data
        docker:
            name: redis-data
            image: busybox
            state: present
            volumes:
            - /data
      - name: Redis
        docker:
            name: redis
            hostname: redis
            image: redis
            command: redis-server --appendonly yes
            state: started
            restart_policy: always
            pull: always
            ports:
            - "6379:6379"
            volumes_from:
            - redis-data

- name: Install RabbitMQ Docker Containers
  hosts: rabbitmq-container
  tasks:
      - name: RabbitMQ Data
        docker:
            name: rabbitmq-data
            image: busybox
            state: present
            volumes:
            - /var/lib/rabbitmq
      - name: RabbitMQ
        docker:
            name: rabbitmq
            hostname: rabbitmq
            image: rabbitmq:management
            state: started
            restart_policy: always
            pull: always
            ports:
            - "5672:5672"
            - "15672:15672"
            volumes_from:
            - rabbitmq-data
            env:
                SERVICE_5672_NAME: rabbitmq
                SERVICE_15672_NAME: rabbitmq-console

- name: Install PostgreSQL Docker Containers
  hosts: postgresql-container
  tasks:
      - name: PostgreSQL Data
        docker:
            name: posgresql-data
            image: busybox
            state: present
            volumes:
            - /var/lib/postgresql/data
      - name: PostgreSQL
        docker:
            name: postgresql
            hostname: postgresql
            image: postgres
            state: started
            restart_policy: always
            pull: always
            ports:
            - "5432:5432"
            volumes_from:
            - posgresql-data
            env:
                POSTGRES_PASSWORD: posgres

- name: Install Nginx Docker Containers
  hosts: nginx-container
  tasks:
      - name: Nginx Data
        docker:
            name: nginx-data
            image: busybox
            state: present
            volumes:
            - /var/cache/nginx
      - name: Nginx
        docker:
            name: nginx
            hostname: nginx
            image: nginx
            state: started
            restart_policy: always
            pull: always
            ports:
            - "80:80"
            - "443:443"
            volumes_from:
            - nginx-data
            env:
                SERVICE_80_NAME: nginx
                SERVICE_443_NAME: nginx-secure

- name: Install MySQL Docker Containers
  hosts: mysql-container
  tasks:
      - name: MySQL Data
        docker:
            name: mysql-data
            image: busybox
            state: present
            volumes:
            - /var/lib/mysql
            - /etc/mysql/conf.d 
# custom configuration files should be copied into /etc/mysql/conf.d
      - name: MySQL
        docker:
            name: mysql
            hostname: mysql
            image: mysql
            state: started
            restart_policy: always
            pull: always
            ports:
            - "3306:3306"
            volumes_from:
            - mysql-data
            env:
                MYSQL_ROOT_PASSWORD: root
                MYSQL_USER: mysql
                MYSQL_PASSWORD: mysql
                MYSQL_DATABASE: sushe

- name: Install MongoDB Docker Containers
  hosts: mongodb-container
  tasks:
      - name: MongoDB Data
        docker:
            name: mongodb-data
            image: busybox
            state: present
            volumes:
            - /data/db
      - name: MongoDB
        docker:
            name: mongodb
            hostname: mongodb
            image: mongo
            state: started
            restart_policy: always
            pull: always
            command: --storageEngine=wiredTiger --notablescan --journalCommitInterval=300 
            ports:
            - "27017:27017"
            volumes_from:
            - mongodb-data

- name: Install Elasticsearch Docker Containers
  hosts: elasticsearch-container
  tasks:
      - name: Elasticsearch Data
        docker:
            name: elasticsearch-data
            image: busybox
            state: present
            volumes:
            - /usr/share/elasticsearch/data
      - name: Elasticsearch
        docker:
            name: elasticsearch
            hostname: elasticsearch
            image: elasticsearch
            state: started
            restart_policy: always
            pull: always
            ports:
            - "9200:9200"
            - "9300:9300"
            volumes_from:
            - elasticsearch-data
            env:
                SERVICE_9200_NAME: elasticsearch
                SERVICE_9300_NAME: elasticsearch-cluster

# still trying t figure out how to use this image
- name: Install Logstash Docker Containers
  hosts: logstash-container
  tasks:
      - name: logstash
        docker:
            name: logstash
            hostname: logstash
            image: logstash
            state: started
            restart_policy: always
            pull: always

- name: Install mecached Docker Containers 
  hosts: memcached-container
  tasks:
      - name: memcached
        docker:
            name: memcached
            hostname: memcached
            image: memcached
            state: started
            restart_policy: always
            pull: always
            ports:
            - "11211:11211"
            env:
                SERVICE_11211_NAME: memcached

- name: Install Squid Proxy Docker Containers
  hosts: squid-container
  tasks:
      - name: Squid Data
        docker:
            name: squid-data
            image: busybox
            state: present
            volumes:
            - /var/spool/squid3 
      - name: Squid
        docker:
            name: squid
            hostname: squid
            image: sameersbn/squid 
            state: started
            restart_policy: always
            pull: always
            ports:
            - "3128:3128"
            volumes_from:
            - squid-data
            env:
                SERVICE_3128_NAME: squid

- name: Oracle JDK 8 bits
  hosts: oracle-jdk-8-box 
  tasks:
      - name: Create destination directory
        file: path=/usr/lib/jvm owner=root group=root state=directory mode=755
      - name: Copy JDK 8 download script to a safe place
        copy: src=scripts/download-jdk-8.sh dest=/tmp/download-jdk-8.sh owner=root group=root mode=755 backup=no
      - name: Execute download script
        command: /tmp/download-jdk-8.sh
      - name: unpack the archive
        unarchive: src=/root/jdk-8.tar.gz dest=/usr/lib/jvm copy=no owner=root group=root mode=755 creates=/usr/lib/jvm/jdk1.8.0_51/COPYRIGHT
      - name: soft-link the JDK to a normalized location
        file: src=/usr/lib/jvm/jdk1.8.0_51 dest=/usr/lib/jvm/oracle-jdk-8 owner=root group=root state=link
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Execute JAVA_HOME
        command: /tmp/set-etc-environment.sh JAVA_HOME /usr/lib/jvm/oracle-jdk-8
      - name: Execute JDK_HOME
        command: /tmp/set-etc-environment.sh JDK_HOME /usr/lib/jvm/oracle-jdk-8
      - name: Execute JAVA8_HOME
        command: /tmp/set-etc-environment.sh JAVA8_HOME /usr/lib/jvm/oracle-jdk-8

- name: Oracle JDK 7 bits
  hosts: oracle-jdk-7-box 
  tasks:
      - name: Create destination directory
        file: path=/usr/lib/jvm owner=root group=root state=directory mode=755
      - name: Copy JDK 7 download script to a safe place
        copy: src=scripts/download-jdk-7.sh dest=/tmp/download-jdk-7.sh owner=root group=root mode=755 backup=no
      - name: Execute download script
        command: /tmp/download-jdk-7.sh
      - name: unpack the archive
        unarchive: src=/root/jdk-7.tar.gz dest=/usr/lib/jvm copy=no owner=root group=root mode=755 creates=/usr/lib/jvm/jdk1.7.0_79/COPYRIGHT
      - name: soft-link the JDK to a normalized location
        file: src=/usr/lib/jvm/jdk1.7.0_79 dest=/usr/lib/jvm/oracle-jdk-7 owner=root group=root state=link
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export JAVA7_HOME
        command: /tmp/set-etc-environment.sh JAVA7_HOME /usr/lib/jvm/oracle-jdk-7

- name: Groovy Environment Manager
  hosts: gvm-box 
  tasks:
      - name: Copy GVM installation script to a safe place
        copy: src=scripts/install-gvm.sh dest=/tmp/install-gvm.sh owner=vagrant group=vagrant mode=755 backup=no
      - name: Install GVM
        shell: sudo --user vagrant --set-home --non-interactive --login /tmp/install-gvm.sh --
      - name: Copy GVM configuration file
        copy: src=files/gvm.config dest=/home/vagrant/.gvm/etc/config owner=vagrant group=vagrant mode=644 backup=no
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Apache Ant bits
  hosts: apache-ant-box
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download Ant
        get_url: url=http://mirrors.ibiblio.org/apache//ant/binaries/apache-ant-1.9.5-bin.tar.gz dest=/root/ant.tar.gz mode=444
      - name: Unpack Ant
        unarchive: src=/root/ant.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/apache-ant-1.9.5/README
      - name: Soft-link Ant
        file: src=/home/vagrant/Software/apache-ant-1.9.5 path=/home/vagrant/Software/ant state=link
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export ANT_HOME
        command: /tmp/set-etc-environment.sh ANT_HOME /home/vagrant/Software/ant

- name: Apache Maven bits
  hosts: apache-maven-box 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download Maven
        get_url: url=http://mirrors.ibiblio.org/apache/maven/maven-3/3.3.1/binaries/apache-maven-3.3.1-bin.tar.gz dest=/root/maven.tar.gz mode=444
      - name: Unpack Maven
        unarchive: src=/root/maven.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/apache-maven-3.3.1/NOTICE
      - name: Soft-link Maven
        file: src=/home/vagrant/Software/apache-maven-3.3.1 path=/home/vagrant/Software/maven state=link
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export M2_HOME
        command: /tmp/set-etc-environment.sh M2_HOME /home/vagrant/Software/maven

- name: Node
  hosts: node-js-box 
  tasks:
      - name: Download Node
        get_url: url=http://nodejs.org/dist/v0.12.0/node-v0.12.0-linux-x64.tar.gz dest=/root/node.tar.gz mode=444
      - name: Unpack Node
        unarchive: src=/root/node.tar.gz dest=/opt copy=no owner=root group=root creates=/opt/node-v0.12.0-linux-x64/LICENSE
      - name: Soft-link Node
        file: src=/opt/node-v0.12.0-linux-x64/bin/node path=/usr/local/bin/node state=link
      - name: Soft-link NPM
        file: src=/opt/node-v0.12.0-linux-x64/bin/npm path=/usr/local/bin/npm state=link
      - name: Set permissions on the opt directory
        file: path=/opt owner=root group=root recurse=true state=directory
      - name: Update npm
        command: /usr/local/bin/npm install -g npm@"2.7.1"
      - name: Install Yeoman 
        npm: name=yo global=yes
      - name: Install Bower 
        npm: name=bower global=yes
      - name: Install Grunt 
        npm: name=grunt-cli global=yes
      - name: Install JHipster 
        npm: name=generator-jhipster global=yes

- name: FFmpeg binary
  hosts: ffmpeg-box 
  tasks:
      - name: Download FFmpeg
        get_url: url=http://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz dest=/root/ffmpeg.tar.xz mode=444
      - name: Unpack FFmpeg
        unarchive: src=/root/ffmpeg.tar.xz dest=/opt copy=no owner=root group=root creates=/opt/ffmpeg-2.7.2-64bit-static/ffprobe
      - name: Soft-link FFmpeg
        file: src=/opt/ffmpeg-2.7.2-64bit-static path=/opt/ffmpeg state=link
      - name: Set permissions on the opt directory
        file: path=/opt owner=root group=root recurse=true state=directory

- name: Jetbrains IntelliJ IDEA
  hosts: intellij-box 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download IntelliJ IDEA
        get_url: url=http://download.jetbrains.com/idea/ideaIU-14.1.4.tar.gz dest=/root/idea.tar.gz mode=444
      - name: Unpack IntelliJ IDEA
        unarchive: src=/root/idea.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/idea-IU-141.1532.4/build.txt
      - name: Soft-link IntelliJ
        file: src=/home/vagrant/Software/idea-IU-141.1532.4 path=/home/vagrant/Software/idea state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop IntelliJ file
        copy: src=files/InjelliJ.desktop dest=/home/vagrant/Desktop/InjelliJ.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export IDEA_JDK
        command: /tmp/set-etc-environment.sh IDEA_JDK /usr/lib/jvm/oracle-jdk-8
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Jetbrain's PyCharm IDE
  hosts: pycharm-box 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download PyCharm
        get_url: url=http://download.jetbrains.com/python/pycharm-professional-4.5.1.tar.gz dest=/root/pycharm.tar.gz mode=444
      - name: Unpack PyCharm
        unarchive: src=/root/pycharm.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/pycharm-4.5.1/build.txt
      - name: Soft-link PyCharm
        file: src=/home/vagrant/Software/pycharm-4.5.1 path=/home/vagrant/Software/pycharm state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop PyCharm file
        copy: src=files/PyCharm.desktop dest=/home/vagrant/Desktop/PyCharm.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export PYCHARM_JDK
        command: /tmp/set-etc-environment.sh PYCHARM_JDK  /usr/lib/jvm/oracle-jdk-8

- name: Jetbrain's RubyMine IDE
  hosts: rubymine-box 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download RubyMine
        get_url: url=http://download.jetbrains.com/ruby/RubyMine-7.1.2.tar.gz dest=/root/rubymine.tar.gz mode=444
      - name: Unpack RubyMine
        unarchive: src=/root/rubymine.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/RubyMine-7.1.2/build.txt
      - name: Soft-link RubyMine
        file: src=/home/vagrant/Software/RubyMine-7.1.2 path=/home/vagrant/Software/rubymine state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop RubyMine file
        copy: src=files/RubyMine.desktop dest=/home/vagrant/Desktop/RubyMine.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export RUBYMINE_JDK
        command: /tmp/set-etc-environment.sh RUBYMINE_JDK /usr/lib/jvm/oracle-jdk-8

- name: Jetbrain's WebStorm IDE
  hosts: webstorm-box 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download WebStorm
        get_url: url=http://download.jetbrains.com/webstorm/WebStorm-10.0.4.tar.gz dest=/root/webstorm.tar.gz mode=444
      - name: Unpack WebStorm
        unarchive: src=/root/webstorm.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/WebStorm-141.1550/build.txt
      - name: Soft-link WebStorm
        file: src=/home/vagrant/Software/WebStorm-141.1550 path=/home/vagrant/Software/webstorm state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop WebStorm file
        copy: src=files/WebStorm.desktop dest=/home/vagrant/Desktop/WebStorm.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: Export WEBIDE_JDK
        command: /tmp/set-etc-environment.sh WEBIDE_JDK /usr/lib/jvm/oracle-jdk-8

- name: Spring Tool Suite
  hosts: sts-box 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download STS
        get_url: url=http://dist.springsource.com/release/STS/3.6.4.RELEASE/dist/e4.4/spring-tool-suite-3.6.4.RELEASE-e4.4.2-linux-gtk-x86_64.tar.gz dest=/root/sts.tar.gz mode=444
      - name: Unpack STS
        unarchive: src=/root/sts.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/sts-bundle/sts-3.6.4.RELEASE/readme
      - name: Soft-link STS
        file: src=/home/vagrant/Software/sts-bundle/sts-3.6.4.RELEASE path=/home/vagrant/Software/sts state=link
      - name: Soft-link JRE
        file: src=/usr/lib/jvm/oracle-jdk-8/jre path=/home/vagrant/Software/sts-bundle/sts-3.6.4.RELEASE/jre state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop STS file
        copy: src=files/STS.desktop dest=/home/vagrant/Desktop/STS.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Groovy/Grails Tool Suite
  hosts: ggts-box 
  tasks:
      - name: Create Software directory
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download GGTS
        get_url: url=http://dist.springsource.com/release/STS/3.6.4.RELEASE/dist/e4.4/groovy-grails-tool-suite-3.6.4.RELEASE-e4.4.2-linux-gtk-x86_64.tar.gz dest=/root/ggts.tar.gz mode=444
      - name: Unpack GGTS
        unarchive: src=/root/ggts.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/ggts-bundle/ggts-3.6.4.RELEASE/readme
      - name: Soft-link GGTS
        file: src=/home/vagrant/Software/ggts-bundle/ggts-3.6.4.RELEASE path=/home/vagrant/Software/ggts state=link
      - name: Soft-link JRE
        file: src=/usr/lib/jvm/oracle-jdk-8/jre path=/home/vagrant/Software/ggts-bundle/ggts-3.6.4.RELEASE/jre state=link
      - name: Create Desktop directory
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop GGTS file
        copy: src=files/GGTS.desktop dest=/home/vagrant/Desktop/GGTS.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: Charles proxy bits 
  hosts: charles-proxy-box
  tasks:
      - name: Create Software directory 
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download Charles 
        get_url: url=http://www.charlesproxy.com/assets/release/3.10/charles-proxy-3.10.tar.gz dest=/root/charles.tar.gz mode=444 
      - name: Unpack Charles 
        unarchive: src=/root/charles.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/charles/icon/charles_icon16.png
      - name: Create Desktop directory 
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop Charles file  
        copy: src=files/Charles.desktop dest=/home/vagrant/Desktop/Charles.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: DbVisualizer Database Browser 
  hosts: dbvisualizer-box
  tasks:
      - name: Create Software directory 
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download DbVisualizer 
        get_url: url=https://www.dbvis.com/product_download/dbvis-9.2.5/media/dbvis_unix_9_2_5.tar.gz dest=/root/dbvis.tar.gz mode=444 
      - name: Unpack DbVisualizer 
        unarchive: src=/root/dbvis.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/DbVisualizer
      - name: Create Desktop directory 
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop DbVisualizer file  
        copy: src=files/Database.desktop dest=/home/vagrant/Desktop/Database.desktop owner=vagrant group=vagrant backup=no mode=755
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory

- name: emacs  
  hosts: emacs-box 
  tasks:
      - name: Install signing keys
        apt_key: state=present keyserver=keyserver.ubuntu.com id=0D7BAE435ADBC6C3E4918A74062D648FD62FCE72
      - name: Install emacs repository
        apt_repository: repo='deb http://ppa.launchpad.net/ubuntu-elisp/ppa/ubuntu trusty main' state=present 
      - name: Install emacs software
        apt: name=emacs24 state=latest
      - name: Install emacs list files
        apt: name=emacs24-el state=latest
      - name: Install emacs documentation 
        apt: name=emacs24-common-non-dfsg state=latest
      - name: Create Desktop directory 
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop emacs file  
        copy: src=files/emacs.desktop dest=/home/vagrant/Desktop/emacs.desktop owner=vagrant group=vagrant backup=no mode=755

- name: logFACES Client 
  hosts: logfaces-client-box
  tasks:
      - name: Create Software directory 
        file: path=/home/vagrant/Software owner=vagrant group=vagrant state=directory mode=755
      - name: Download logFACES 
        get_url: url=http://www.moonlit-software.com/logfaces/downloads/lfc.4.2.0.linux.gtk.x86_64.tar.gz dest=/root/logfaces.tar.gz mode=444 
      - name: Unpack logFACES 
        unarchive: src=/root/logfaces.tar.gz dest=/home/vagrant/Software copy=no owner=vagrant group=vagrant creates=/home/vagrant/Software/logFacesClient/about.html
      - name: soft-link the JDK to a normalized location
        file: src=/usr/lib/jvm/oracle-jdk-8/jre dest=/home/vagrant/Software/logFacesClient/jre owner=root group=root state=link
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Create Desktop directory 
        file: path=/home/vagrant/Desktop owner=vagrant group=vagrant state=directory mode=755
      - name: Copy desktop logFACES file  
        copy: src=files/logFACES.desktop dest=/home/vagrant/Desktop/logFACES.desktop owner=vagrant group=vagrant backup=no mode=755

- name: MySQL Workbench 
  hosts: mysql-workbench-box 
  tasks:
      - name: Install MySQL Workbench
        apt: name=mysql-workbench state=latest

- name: MySQL CLI 
  hosts: mysql-cli-box 
  tasks:
      - name: Install MySQL client 
        apt: name=mysql-client state=latest

- name: Desktop bits and tweaks 
  hosts: gui
  tasks:
      - name: Install desktop packages
        apt: "name={{ item }} state=present update_cache=true cache_valid_time=600"
        with_items:
           - wireshark
           - chromium-browser
      - name: Copy login icon  
        copy: src=files/dr-girlfriend.png dest=/home/vagrant/.face owner=vagrant group=vagrant backup=no mode=644
      - name: Create bin directory 
        file: path=/home/vagrant/bin owner=vagrant group=vagrant state=directory mode=755
      - name: Copy Git intialization script  
        copy: src=scripts/initialize-git.sh dest=/home/vagrant/bin/initialize-git.sh owner=vagrant group=vagrant backup=no mode=744
      - name: Copy JDK reset script  
        copy: src=scripts/reset-jdks.sh dest=/home/vagrant/bin/reset-jdks.sh owner=vagrant group=vagrant backup=no mode=744
      - name: Copy IntelliJ IDEA reset script  
        copy: src=scripts/reset-idea.sh dest=/home/vagrant/bin/reset-idea.sh owner=vagrant group=vagrant backup=no mode=744
      - name: Copy POM file  
        copy: src=files/pom.xml dest=/home/vagrant/bin/pom.xml owner=vagrant group=vagrant backup=no mode=644
      - name: Copy settings file  
        copy: src=files/settings.xml dest=/home/vagrant/bin/settings.xml owner=vagrant group=vagrant backup=no mode=644
      - name: Copy Artifactory population script  
        copy: src=scripts/populate-artifactory.sh dest=/home/vagrant/bin/populate-artifactory.sh owner=vagrant group=vagrant backup=no mode=744
      - name: Install Leiningen  
        get_url: url=https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein dest=/home/vagrant/bin/lein mode=0744
      - name: Set permissions on the home directory
        file: path=/home/vagrant owner=vagrant group=vagrant recurse=true state=directory
      - name: Copy export script to a safe place
        copy: src=scripts/set-etc-environment.sh dest=/tmp/set-etc-environment.sh owner=root group=root mode=755 backup=no
      - name: export JAVA_CMD
        command: /tmp/set-etc-environment.sh JAVA_CMD /usr/lib/jvm/oracle-jdk-8/bin/java

- name: Terraform 
  hosts: terraform-box
  tasks:
      - name: Download Terraform
        get_url: url=https://dl.bintray.com/mitchellh/terraform/terraform_0.6.3_linux_amd64.zip dest=/root/terraform.zip mode=444
      - name: Unpack Terraform
        unarchive: src=/root/terraform.zip dest=/usr/local/bin copy=no owner=root group=root mode=555 creates=/usr/local/bin/terraform

- name: Packer 
  hosts: packer-box
  tasks:
      - name: Download Packer
        get_url: url=https://dl.bintray.com/mitchellh/packer/packer_0.8.6_linux_amd64.zip dest=/root/packer.zip mode=444
      - name: Unpack Terraform
        unarchive: src=/root/packer.zip dest=/usr/local/bin copy=no owner=root group=root mode=555 creates=/usr/local/bin/packer

- name: AWS CLI
  hosts: aws-box
  tasks:
      - name: AWS CLI
        command: pip install --upgrade awscli
